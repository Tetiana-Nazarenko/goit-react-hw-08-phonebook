{"version":3,"file":"static/js/735.9a4d5f62.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n\n// export const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  margin: 20px;\n  font-weight: 500;\n  font-size: 22px;\n  padding-left: 20px;\n`;\nexport const FilterInput = styled.input`\n  margin-left: 15px;\n\n  margin: 20px;\n  padding: 10px;\n  width: 58%;\n  color: blue;\n  font-weight: 600;\n  font-size: 16px;\n`;\n","//import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'redux/contacts/filtersSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n//import { nanoid } from '@reduxjs/toolkit';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\n//const filterInputId = nanoid();\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          value={value}\n          onChange={handleFilter}\n          //id={filterInputId}\n        />\n      </FilterLabel>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormBlock = styled.div`\n  margin: 20px;\n  background-color: yellow;\n  border-radius: 15px;\n  border: 1px solid black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nexport const LabelTitle = styled.label`\n  font-size: 24px;\n  font-weight: 700;\n  margin-left: 20px;\n`;\nexport const InputName = styled.input`\n  margin: 35px;\n  padding: 10px;\n  width: 640px;\n  color: blue;\n  font-weight: 600;\n  font-size: 16px;\n`;\nexport const Input = styled.input`\n  margin: 10px;\n  padding: 10px;\n  width: 640px;\n  color: blue;\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nexport const ButtonAddContact = styled.button`\n  padding: 15px 15px;\n  margin: 20px auto;\n  font-weight: 600;\n  font-size: 22px;\n  color: white;\n  background-color: blue;\n  border-radius: 10px;\n  border: none;\n  width: 30%;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\n\n//import { addContact } from 'redux/contactSlice';\nimport { addContact } from 'redux/contacts/operations';\n\nimport {\n  FormBlock,\n  Form,\n  LabelTitle,\n  InputName,\n  Input,\n  ButtonAddContact,\n} from './ContactForm.styled';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  //*** */\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // onSubmit({\n    //   name: name,\n    //   number: number,\n    // });\n    //reset();\n\n    // const form = event.target;\n    // const formName = event.target.elements.name.value;\n    // const formNumber = event.target.elements.number.value;\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    if (isInContacts) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  //*** */\n  return (\n    <>\n      <FormBlock>\n        <Form onSubmit={handleSubmit}>\n          <LabelTitle htmlFor={nameInputId}>\n            Name:\n            <InputName\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </LabelTitle>\n\n          <LabelTitle htmlFor={numberInputId}>\n            Number:\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </LabelTitle>\n\n          <ButtonAddContact type=\"submit\">Add contact </ButtonAddContact>\n        </Form>\n      </FormBlock>\n      <Filter />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  margin: 20px;\n  padding: 20px;\n  background-color: yellow;\n  border-radius: 15px;\n  border: 1px solid black;\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  color: blue;\n  font-size: 26px;\n  font-weight: 500;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DeleteButton = styled.button`\n  padding: 10px 10px;\n\n  font-weight: 600;\n  color: white;\n  background-color: blue;\n  border-radius: 7px;\n  border: none;\n\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { ContactsList, DeleteButton, ContactItem } from './Contacts.styled';\n\nexport const Contacts = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  //const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <ContactsList>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id}>\n          {contact.name + ':' + contact.number}\n          {\n            <DeleteButton\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete{' '}\n            </DeleteButton>\n          }\n        </ContactItem>\n      ))}\n    </ContactsList>\n  );\n};\n//export default Contacts;\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  margin: 20px;\n  padding-left: 20px;\n  font-size: 30px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { ContactForm } from '../components/ContactForm/ContactForm.jsx';\nimport { Contacts } from '../components/Contacts/Contacts.jsx';\n//import { ContactsTitle } from './Layout.js';\n//import Filter from '../components/Filter/Filter.jsx';\n// import { GlobalStyle } from './GlobaleStyle.js';\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport { getIsLoading } from 'redux/contacts/selectors.js';\n\nimport { ContactsTitle } from './Contacts.styled.js';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet> */}\n      <title> Your contacts</title>\n      {/* </Helmet> */}\n      <ContactForm />\n      <ContactsTitle>Contacts:</ContactsTitle>\n      {/* <Filter /> */}\n      <div> {isLoading && 'Request in progress...'}</div>\n      <Contacts />\n      {/* <GlobalStyle /> */}\n    </>\n  );\n}\n"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getIsLoading","state","contacts","isLoading","getFilter","filter","getVisibleContacts","items","contact","toLowerCase","includes","FilterLabel","styled","_templateObject","_taggedTemplateLiteral","FilterInput","_templateObject2","Filter","useSelector","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","type","onChange","event","normalizedValue","target","setContactsFilter","FormBlock","Form","LabelTitle","_templateObject3","InputName","_templateObject4","Input","_templateObject5","ButtonAddContact","_templateObject6","nameInputId","numberInputId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","onSubmit","preventDefault","some","trim","alert","addContact","htmlFor","pattern","title","required","ContactsList","ContactItem","DeleteButton","Contacts","onClick","deleteContact","ContactsTitle","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}